<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <polyline data-points="0,0 100,0" data-type="line" data-label="" points="40,183.1449275362319 148.21256038647343,183.1449275362319" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="100,0 100,100" data-type="line" data-label="" points="148.21256038647343,183.1449275362319 148.21256038647343,291.35748792270533" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="100,100 0,100" data-type="line" data-label="" points="148.21256038647343,291.35748792270533 40,291.35748792270533" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="0,100 0,0" data-type="line" data-label="" points="40,291.35748792270533 40,183.1449275362319" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="277.5,0 377.5,0" data-type="line" data-label="" points="340.28985507246375,183.1449275362319 448.50241545893715,183.1449275362319" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="377.5,0 377.5,100" data-type="line" data-label="" points="448.50241545893715,183.1449275362319 448.50241545893715,291.35748792270533" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="377.5,100 277.5,100" data-type="line" data-label="" points="448.50241545893715,291.35748792270533 340.28985507246375,291.35748792270533" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <polyline data-points="277.5,100 277.5,0" data-type="line" data-label="" points="340.28985507246375,291.35748792270533 340.28985507246375,183.1449275362319" fill="none" stroke="black" stroke-width="1" />
  </g>
  <g>
    <rect data-type="rect" data-label="box1" data-x="55" data-y="55" x="40" y="183.1449275362319" width="119.03381642512076" height="119.03381642512076" fill="hsl(257.14285714285717deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box2" data-x="165" data-y="55" x="159.03381642512076" y="183.1449275362319" width="119.03381642512076" height="119.03381642512076" fill="hsl(274.2857142857143deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box3" data-x="55" data-y="165" x="40" y="302.17874396135267" width="119.03381642512076" height="119.03381642512079" fill="hsl(291.42857142857144deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box4" data-x="165" data-y="165" x="159.03381642512076" y="302.17874396135267" width="119.03381642512076" height="119.03381642512079" fill="hsl(308.57142857142856deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box1" data-x="332.5" data-y="55" x="340.28985507246375" y="183.1449275362319" width="119.03381642512073" height="119.03381642512076" fill="hsl(257.14285714285717deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box2" data-x="462.5" data-y="55" x="480.9661835748792" y="183.1449275362319" width="119.03381642512079" height="119.03381642512076" fill="hsl(274.2857142857143deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box3" data-x="332.5" data-y="185" x="340.28985507246375" y="323.82125603864733" width="119.03381642512073" height="119.03381642512079" fill="hsl(291.42857142857144deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g>
  <g>
    <rect data-type="rect" data-label="box4" data-x="462.5" data-y="185" x="480.9661835748792" y="323.82125603864733" width="119.03381642512079" height="119.03381642512079" fill="hsl(308.57142857142856deg, 100%, 50%)" stroke="black" stroke-width="0.9241071428571429" />
  </g><text data-type="text" data-label="algo" data-x="110" data-y="232.9375" x="159.03381642512076" y="435.21256038647346" fill="black" font-size="13.999999999999998" font-family="sans-serif" text-anchor="middle" dominant-baseline="text-after-edge">algo</text><text data-type="text" data-label="correct" data-x="397.5" data-y="252.9375" x="470.1449275362319" y="456.8550724637681" fill="black" font-size="13.999999999999998" font-family="sans-serif" text-anchor="middle" dominant-baseline="text-after-edge">correct</text>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 1.0821256038647342,
        "c": 0,
        "e": 40,
        "b": 0,
        "d": 1.0821256038647342,
        "f": 183.1449275362319
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>