<svg width="640" height="640" viewBox="0 0 640 640" xmlns="http://www.w3.org/2000/svg">
  <rect width="100%" height="100%" fill="white" />
  <g>
    <circle data-type="point" data-label="" data-x="0" data-y="0" cx="40" cy="225.23269111858014" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="100" data-y="0" cx="127.76730888141985" cy="225.23269111858014" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="100" data-y="100" cx="127.76730888141985" cy="313" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="" data-x="0" data-y="100" cx="40" cy="313" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="corner" data-x="354.47265625" data-y="0" cx="351.1111111111111" cy="225.23269111858014" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="corner" data-x="454.47265625" data-y="0" cx="438.87841999253095" cy="225.23269111858014" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="corner" data-x="454.47265625" data-y="100" cx="438.87841999253095" cy="313" r="3" fill="black" />
  </g>
  <g>
    <circle data-type="point" data-label="corner" data-x="354.47265625" data-y="100" cx="351.1111111111111" cy="313" r="3" fill="black" />
  </g>
  <g>
    <rect data-type="rect" data-label="start-item" data-x="33.3359375" data-y="91" x="40" y="297.2018844013444" width="58.51611046828414" height="15.798115598655613" fill="none" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="end-item" data-x="231.125" data-y="91" x="215.5346177628397" y="297.2018844013444" width="54.63514977868388" height="15.798115598655613" fill="none" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="center-item" data-x="40.015625" data-y="191" x="40" y="384.96919328276425" width="70.24127438916132" height="15.798115598655556" fill="none" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="stretch-item" data-x="241.7890625" data-y="191" x="215.5346177628397" y="384.96919328276425" width="73.35427112604921" height="15.798115598655556" fill="hsl(0deg, 100%, 50%)" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="start-item" data-x="387.80859375" data-y="91" x="351.1111111111111" y="297.2018844013444" width="58.516110468284126" height="15.798115598655613" fill="none" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="end-item" data-x="585.59765625" data-y="91" x="526.6457288739508" y="297.2018844013444" width="54.635149778683854" height="15.798115598655613" fill="none" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="center-item" data-x="394.48828125" data-y="191" x="351.1111111111111" y="384.96919328276425" width="70.24127438916133" height="15.798115598655556" fill="none" stroke="black" stroke-width="1.1393763950892857" />
  </g>
  <g>
    <rect data-type="rect" data-label="stretch-item" data-x="596.26171875" data-y="191" x="526.6457288739508" y="384.96919328276425" width="73.35427112604918" height="15.798115598655556" fill="hsl(0deg, 100%, 50%)" stroke="black" stroke-width="1.1393763950892857" />
  </g><text data-type="text" data-label="algo" data-x="141.7890625" data-y="215.95126953125" x="164.44444444444446" y="414.7673088814198" fill="black" font-size="14" font-family="sans-serif" text-anchor="middle" dominant-baseline="text-after-edge">algo</text><text data-type="text" data-label="correct" data-x="496.26171875" data-y="215.95126953125" x="475.55555555555554" y="414.7673088814198" fill="black" font-size="14" font-family="sans-serif" text-anchor="middle" dominant-baseline="text-after-edge">correct</text>
  <g id="crosshair" style="display: none">
    <line id="crosshair-h" y1="0" y2="640" stroke="#666" stroke-width="0.5" />
    <line id="crosshair-v" x1="0" x2="640" stroke="#666" stroke-width="0.5" /><text id="coordinates" font-family="monospace" font-size="12" fill="#666"></text>
  </g>
  <script>
    <![CDATA[
    document.currentScript.parentElement.addEventListener('mousemove', (e) => {
      const svg = e.currentTarget;
      const rect = svg.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      const crosshair = svg.getElementById('crosshair');
      const h = svg.getElementById('crosshair-h');
      const v = svg.getElementById('crosshair-v');
      const coords = svg.getElementById('coordinates');

      crosshair.style.display = 'block';
      h.setAttribute('x1', '0');
      h.setAttribute('x2', '640');
      h.setAttribute('y1', y);
      h.setAttribute('y2', y);
      v.setAttribute('x1', x);
      v.setAttribute('x2', x);
      v.setAttribute('y1', '0');
      v.setAttribute('y2', '640');

      // Calculate real coordinates using inverse transformation
      const matrix = {
        "a": 0.8776730888141985,
        "c": 0,
        "e": 40,
        "b": 0,
        "d": 0.8776730888141985,
        "f": 225.23269111858014
      };
      // Manually invert and apply the affine transform
      // Since we only use translate and scale, we can directly compute:
      // x' = (x - tx) / sx
      // y' = (y - ty) / sy
      const sx = matrix.a;
      const sy = matrix.d;
      const tx = matrix.e;
      const ty = matrix.f;
      const realPoint = {
        x: (x - tx) / sx,
        y: (y - ty) / sy // Flip y back since we used negative scale
      }

      coords.textContent = `(${realPoint.x.toFixed(2)}, ${realPoint.y.toFixed(2)})`;
      coords.setAttribute('x', (x + 5).toString());
      coords.setAttribute('y', (y - 5).toString());
    });
    document.currentScript.parentElement.addEventListener('mouseleave', () => {
      document.currentScript.parentElement.getElementById('crosshair').style.display = 'none';
    });
    ]]>
  </script>
</svg>